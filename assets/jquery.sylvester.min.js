/*! === Sylvester ===
// Vector and Matrix mathematics modules for JavaScript
// Copyright (c) 2007 James Coglan
// 
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
*/
var Sylvester={version:"0.1.3",precision:1e-6};function Vector(){}function Matrix(){}function Line(){}function Plane(){}Vector.prototype={e:function(i){return i<1||i>this.elements.length?null:this.elements[i-1]},dimensions:function(){return this.elements.length},modulus:function(){return Math.sqrt(this.dot(this))},eql:function(vector){var n=this.elements.length,V=vector.elements||vector;if(n!=V.length)return!1;do{if(Math.abs(this.elements[n-1]-V[n-1])>Sylvester.precision)return!1}while(--n);return!0},dup:function(){return Vector.create(this.elements)},map:function(fn){var elements=[];return this.each((function(x,i){elements.push(fn(x,i))})),Vector.create(elements)},each:function(fn){var i,n=this.elements.length,k=n;do{i=k-n,fn(this.elements[i],i+1)}while(--n)},toUnitVector:function(){var r=this.modulus();return 0===r?this.dup():this.map((function(x){return x/r}))},angleFrom:function(vector){var V=vector.elements||vector,n=this.elements.length;if(n!=V.length)return null;var dot=0,mod1=0,mod2=0;if(this.each((function(x,i){dot+=x*V[i-1],mod1+=x*x,mod2+=V[i-1]*V[i-1]})),mod1=Math.sqrt(mod1),mod2=Math.sqrt(mod2),mod1*mod2==0)return null;var theta=dot/(mod1*mod2);return theta<-1&&(theta=-1),theta>1&&(theta=1),Math.acos(theta)},isParallelTo:function(vector){var angle=this.angleFrom(vector);return null===angle?null:angle<=Sylvester.precision},isAntiparallelTo:function(vector){var angle=this.angleFrom(vector);return null===angle?null:Math.abs(angle-Math.PI)<=Sylvester.precision},isPerpendicularTo:function(vector){var dot=this.dot(vector);return null===dot?null:Math.abs(dot)<=Sylvester.precision},add:function(vector){var V=vector.elements||vector;return this.elements.length!=V.length?null:this.map((function(x,i){return x+V[i-1]}))},subtract:function(vector){var V=vector.elements||vector;return this.elements.length!=V.length?null:this.map((function(x,i){return x-V[i-1]}))},multiply:function(k){return this.map((function(x){return x*k}))},x:function(k){return this.multiply(k)},dot:function(vector){var V=vector.elements||vector,product=0,n=this.elements.length;if(n!=V.length)return null;do{product+=this.elements[n-1]*V[n-1]}while(--n);return product},cross:function(vector){var B=vector.elements||vector;if(3!=this.elements.length||3!=B.length)return null;var A=this.elements;return Vector.create([A[1]*B[2]-A[2]*B[1],A[2]*B[0]-A[0]*B[2],A[0]*B[1]-A[1]*B[0]])},max:function(){var i,m=0,n=this.elements.length,k=n;do{i=k-n,Math.abs(this.elements[i])>Math.abs(m)&&(m=this.elements[i])}while(--n);return m},indexOf:function(x){var i,index=null,n=this.elements.length,k=n;do{i=k-n,null===index&&this.elements[i]==x&&(index=i+1)}while(--n);return index},toDiagonalMatrix:function(){return Matrix.Diagonal(this.elements)},round:function(){return this.map((function(x){return Math.round(x)}))},snapTo:function(x){return this.map((function(y){return Math.abs(y-x)<=Sylvester.precision?x:y}))},distanceFrom:function(obj){if(obj.anchor)return obj.distanceFrom(this);var V=obj.elements||obj;if(V.length!=this.elements.length)return null;var part,sum=0;return this.each((function(x,i){part=x-V[i-1],sum+=part*part})),Math.sqrt(sum)},liesOn:function(line){return line.contains(this)},liesIn:function(plane){return plane.contains(this)},rotate:function(t,obj){var V,R,x,y,z;switch(this.elements.length){case 2:return 2!=(V=obj.elements||obj).length?null:(R=Matrix.Rotation(t).elements,x=this.elements[0]-V[0],y=this.elements[1]-V[1],Vector.create([V[0]+R[0][0]*x+R[0][1]*y,V[1]+R[1][0]*x+R[1][1]*y]));case 3:if(!obj.direction)return null;var C=obj.pointClosestTo(this).elements;return R=Matrix.Rotation(t,obj.direction).elements,x=this.elements[0]-C[0],y=this.elements[1]-C[1],z=this.elements[2]-C[2],Vector.create([C[0]+R[0][0]*x+R[0][1]*y+R[0][2]*z,C[1]+R[1][0]*x+R[1][1]*y+R[1][2]*z,C[2]+R[2][0]*x+R[2][1]*y+R[2][2]*z]);default:return null}},reflectionIn:function(obj){if(obj.anchor){var P=this.elements.slice(),C=obj.pointClosestTo(P).elements;return Vector.create([C[0]+(C[0]-P[0]),C[1]+(C[1]-P[1]),C[2]+(C[2]-(P[2]||0))])}var Q=obj.elements||obj;return this.elements.length!=Q.length?null:this.map((function(x,i){return Q[i-1]+(Q[i-1]-x)}))},to3D:function(){var V=this.dup();switch(V.elements.length){case 3:break;case 2:V.elements.push(0);break;default:return null}return V},inspect:function(){return"["+this.elements.join(", ")+"]"},setElements:function(els){return this.elements=(els.elements||els).slice(),this}},Vector.create=function(elements){return(new Vector).setElements(elements)},Vector.i=Vector.create([1,0,0]),Vector.j=Vector.create([0,1,0]),Vector.k=Vector.create([0,0,1]),Vector.Random=function(n){var elements=[];do{elements.push(Math.random())}while(--n);return Vector.create(elements)},Vector.Zero=function(n){var elements=[];do{elements.push(0)}while(--n);return Vector.create(elements)},Matrix.prototype={e:function(i,j){return i<1||i>this.elements.length||j<1||j>this.elements[0].length?null:this.elements[i-1][j-1]},row:function(i){return i>this.elements.length?null:Vector.create(this.elements[i-1])},col:function(j){if(j>this.elements[0].length)return null;var i,col=[],n=this.elements.length,k=n;do{i=k-n,col.push(this.elements[i][j-1])}while(--n);return Vector.create(col)},dimensions:function(){return{rows:this.elements.length,cols:this.elements[0].length}},rows:function(){return this.elements.length},cols:function(){return this.elements[0].length},eql:function(matrix){var M=matrix.elements||matrix;if(void 0===M[0][0]&&(M=Matrix.create(M).elements),this.elements.length!=M.length||this.elements[0].length!=M[0].length)return!1;var i,nj,j,ni=this.elements.length,ki=ni,kj=this.elements[0].length;do{i=ki-ni,nj=kj;do{if(j=kj-nj,Math.abs(this.elements[i][j]-M[i][j])>Sylvester.precision)return!1}while(--nj)}while(--ni);return!0},dup:function(){return Matrix.create(this.elements)},map:function(fn){var i,nj,j,els=[],ni=this.elements.length,ki=ni,kj=this.elements[0].length;do{nj=kj,els[i=ki-ni]=[];do{j=kj-nj,els[i][j]=fn(this.elements[i][j],i+1,j+1)}while(--nj)}while(--ni);return Matrix.create(els)},isSameSizeAs:function(matrix){var M=matrix.elements||matrix;return void 0===M[0][0]&&(M=Matrix.create(M).elements),this.elements.length==M.length&&this.elements[0].length==M[0].length},add:function(matrix){var M=matrix.elements||matrix;return void 0===M[0][0]&&(M=Matrix.create(M).elements),this.isSameSizeAs(M)?this.map((function(x,i,j){return x+M[i-1][j-1]})):null},subtract:function(matrix){var M=matrix.elements||matrix;return void 0===M[0][0]&&(M=Matrix.create(M).elements),this.isSameSizeAs(M)?this.map((function(x,i,j){return x-M[i-1][j-1]})):null},canMultiplyFromLeft:function(matrix){var M=matrix.elements||matrix;return void 0===M[0][0]&&(M=Matrix.create(M).elements),this.elements[0].length==M.length},multiply:function(matrix){if(!matrix.elements)return this.map((function(x){return x*matrix}));var returnVector=!!matrix.modulus;if(void 0===(M=matrix.elements||matrix)[0][0]&&(M=Matrix.create(M).elements),!this.canMultiplyFromLeft(M))return null;var i,nj,j,sum,nc,c,ni=this.elements.length,ki=ni,kj=M[0].length,cols=this.elements[0].length,elements=[];do{elements[i=ki-ni]=[],nj=kj;do{j=kj-nj,sum=0,nc=cols;do{c=cols-nc,sum+=this.elements[i][c]*M[c][j]}while(--nc);elements[i][j]=sum}while(--nj)}while(--ni);var M=Matrix.create(elements);return returnVector?M.col(1):M},x:function(matrix){return this.multiply(matrix)},minor:function(a,b,c,d){var i,nj,j,elements=[],ni=c,rows=this.elements.length,cols=this.elements[0].length;do{elements[i=c-ni]=[],nj=d;do{j=d-nj,elements[i][j]=this.elements[(a+i-1)%rows][(b+j-1)%cols]}while(--nj)}while(--ni);return Matrix.create(elements)},transpose:function(){var i,nj,j,rows=this.elements.length,cols=this.elements[0].length,elements=[],ni=cols;do{elements[i=cols-ni]=[],nj=rows;do{j=rows-nj,elements[i][j]=this.elements[j][i]}while(--nj)}while(--ni);return Matrix.create(elements)},isSquare:function(){return this.elements.length==this.elements[0].length},max:function(){var i,nj,j,m=0,ni=this.elements.length,ki=ni,kj=this.elements[0].length;do{i=ki-ni,nj=kj;do{j=kj-nj,Math.abs(this.elements[i][j])>Math.abs(m)&&(m=this.elements[i][j])}while(--nj)}while(--ni);return m},indexOf:function(x){var i,nj,j,ni=this.elements.length,ki=ni,kj=this.elements[0].length;do{i=ki-ni,nj=kj;do{if(j=kj-nj,this.elements[i][j]==x)return{i:i+1,j:j+1}}while(--nj)}while(--ni);return null},diagonal:function(){if(!this.isSquare)return null;var i,els=[],n=this.elements.length,k=n;do{i=k-n,els.push(this.elements[i][i])}while(--n);return Vector.create(els)},toRightTriangular:function(){var els,i,np,p,M=this.dup(),n=this.elements.length,k=n,kp=this.elements[0].length;do{if(i=k-n,0==M.elements[i][i])for(j=i+1;j<k;j++)if(0!=M.elements[j][i]){els=[],np=kp;do{p=kp-np,els.push(M.elements[i][p]+M.elements[j][p])}while(--np);M.elements[i]=els;break}if(0!=M.elements[i][i])for(j=i+1;j<k;j++){var multiplier=M.elements[j][i]/M.elements[i][i];els=[],np=kp;do{p=kp-np,els.push(p<=i?0:M.elements[j][p]-M.elements[i][p]*multiplier)}while(--np);M.elements[j]=els}}while(--n);return M},toUpperTriangular:function(){return this.toRightTriangular()},determinant:function(){if(!this.isSquare())return null;var i,M=this.toRightTriangular(),det=M.elements[0][0],n=M.elements.length-1,k=n;do{i=k-n+1,det*=M.elements[i][i]}while(--n);return det},det:function(){return this.determinant()},isSingular:function(){return this.isSquare()&&0===this.determinant()},trace:function(){if(!this.isSquare())return null;var i,tr=this.elements[0][0],n=this.elements.length-1,k=n;do{i=k-n+1,tr+=this.elements[i][i]}while(--n);return tr},tr:function(){return this.trace()},rank:function(){var i,nj,j,M=this.toRightTriangular(),rank=0,ni=this.elements.length,ki=ni,kj=this.elements[0].length;do{i=ki-ni,nj=kj;do{if(j=kj-nj,Math.abs(M.elements[i][j])>Sylvester.precision){rank++;break}}while(--nj)}while(--ni);return rank},rk:function(){return this.rank()},augment:function(matrix){var M=matrix.elements||matrix;void 0===M[0][0]&&(M=Matrix.create(M).elements);var i,nj,j,T=this.dup(),cols=T.elements[0].length,ni=T.elements.length,ki=ni,kj=M[0].length;if(ni!=M.length)return null;do{i=ki-ni,nj=kj;do{j=kj-nj,T.elements[i][cols+j]=M[i][j]}while(--nj)}while(--ni);return T},inverse:function(){if(!this.isSquare()||this.isSingular())return null;var i,j,np,p,els,divisor,new_element,ni=this.elements.length,ki=ni,M=this.augment(Matrix.I(ni)).toRightTriangular(),kp=M.elements[0].length,inverse_elements=[];do{els=[],np=kp,inverse_elements[i=ni-1]=[],divisor=M.elements[i][i];do{p=kp-np,new_element=M.elements[i][p]/divisor,els.push(new_element),p>=ki&&inverse_elements[i].push(new_element)}while(--np);for(M.elements[i]=els,j=0;j<i;j++){els=[],np=kp;do{p=kp-np,els.push(M.elements[j][p]-M.elements[i][p]*M.elements[j][i])}while(--np);M.elements[j]=els}}while(--ni);return Matrix.create(inverse_elements)},inv:function(){return this.inverse()},round:function(){return this.map((function(x){return Math.round(x)}))},snapTo:function(x){return this.map((function(p){return Math.abs(p-x)<=Sylvester.precision?x:p}))},inspect:function(){var i,matrix_rows=[],n=this.elements.length,k=n;do{i=k-n,matrix_rows.push(Vector.create(this.elements[i]).inspect())}while(--n);return matrix_rows.join("\n")},setElements:function(els){var i,elements=els.elements||els;if(void 0!==elements[0][0]){var nj,kj,j,ni=elements.length,ki=ni;this.elements=[];do{kj=nj=elements[i=ki-ni].length,this.elements[i]=[];do{j=kj-nj,this.elements[i][j]=elements[i][j]}while(--nj)}while(--ni);return this}var n=elements.length,k=n;this.elements=[];do{i=k-n,this.elements.push([elements[i]])}while(--n);return this}},Matrix.create=function(elements){return(new Matrix).setElements(elements)},Matrix.I=function(n){var i,nj,j,els=[],k=n;do{els[i=k-n]=[],nj=k;do{j=k-nj,els[i][j]=i==j?1:0}while(--nj)}while(--n);return Matrix.create(els)},Matrix.Diagonal=function(elements){var i,n=elements.length,k=n,M=Matrix.I(n);do{i=k-n,M.elements[i][i]=elements[i]}while(--n);return M},Matrix.Rotation=function(theta,a){if(!a)return Matrix.create([[Math.cos(theta),-Math.sin(theta)],[Math.sin(theta),Math.cos(theta)]]);var axis=a.dup();if(3!=axis.elements.length)return null;var mod=axis.modulus(),x=axis.elements[0]/mod,y=axis.elements[1]/mod,z=axis.elements[2]/mod,s=Math.sin(theta),c=Math.cos(theta),t=1-c;return Matrix.create([[t*x*x+c,t*x*y-s*z,t*x*z+s*y],[t*x*y+s*z,t*y*y+c,t*y*z-s*x],[t*x*z-s*y,t*y*z+s*x,t*z*z+c]])},Matrix.RotationX=function(t){var c=Math.cos(t),s=Math.sin(t);return Matrix.create([[1,0,0],[0,c,-s],[0,s,c]])},Matrix.RotationY=function(t){var c=Math.cos(t),s=Math.sin(t);return Matrix.create([[c,0,s],[0,1,0],[-s,0,c]])},Matrix.RotationZ=function(t){var c=Math.cos(t),s=Math.sin(t);return Matrix.create([[c,-s,0],[s,c,0],[0,0,1]])},Matrix.Random=function(n,m){return Matrix.Zero(n,m).map((function(){return Math.random()}))},Matrix.Zero=function(n,m){var i,nj,j,els=[],ni=n;do{els[i=n-ni]=[],nj=m;do{j=m-nj,els[i][j]=0}while(--nj)}while(--ni);return Matrix.create(els)},Line.prototype={eql:function(line){return this.isParallelTo(line)&&this.contains(line.anchor)},dup:function(){return Line.create(this.anchor,this.direction)},translate:function(vector){var V=vector.elements||vector;return Line.create([this.anchor.elements[0]+V[0],this.anchor.elements[1]+V[1],this.anchor.elements[2]+(V[2]||0)],this.direction)},isParallelTo:function(obj){if(obj.normal)return obj.isParallelTo(this);var theta=this.direction.angleFrom(obj.direction);return Math.abs(theta)<=Sylvester.precision||Math.abs(theta-Math.PI)<=Sylvester.precision},distanceFrom:function(obj){if(obj.normal)return obj.distanceFrom(this);if(obj.direction){if(this.isParallelTo(obj))return this.distanceFrom(obj.anchor);var N=this.direction.cross(obj.direction).toUnitVector().elements,A=this.anchor.elements,B=obj.anchor.elements;return Math.abs((A[0]-B[0])*N[0]+(A[1]-B[1])*N[1]+(A[2]-B[2])*N[2])}var P=obj.elements||obj,D=(A=this.anchor.elements,this.direction.elements),PA1=P[0]-A[0],PA2=P[1]-A[1],PA3=(P[2]||0)-A[2],modPA=Math.sqrt(PA1*PA1+PA2*PA2+PA3*PA3);if(0===modPA)return 0;var cosTheta=(PA1*D[0]+PA2*D[1]+PA3*D[2])/modPA,sin2=1-cosTheta*cosTheta;return Math.abs(modPA*Math.sqrt(sin2<0?0:sin2))},contains:function(point){var dist=this.distanceFrom(point);return null!==dist&&dist<=Sylvester.precision},liesIn:function(plane){return plane.contains(this)},intersects:function(obj){return obj.normal?obj.intersects(this):!this.isParallelTo(obj)&&this.distanceFrom(obj)<=Sylvester.precision},intersectionWith:function(obj){if(obj.normal)return obj.intersectionWith(this);if(!this.intersects(obj))return null;var P=this.anchor.elements,X=this.direction.elements,Q=obj.anchor.elements,Y=obj.direction.elements,X1=X[0],X2=X[1],X3=X[2],Y1=Y[0],Y2=Y[1],Y3=Y[2],PsubQ1=P[0]-Q[0],PsubQ2=P[1]-Q[1],PsubQ3=P[2]-Q[2],YdotY=Y1*Y1+Y2*Y2+Y3*Y3,XdotY=X1*Y1+X2*Y2+X3*Y3,k=((-X1*PsubQ1-X2*PsubQ2-X3*PsubQ3)*YdotY/(X1*X1+X2*X2+X3*X3)+XdotY*(Y1*PsubQ1+Y2*PsubQ2+Y3*PsubQ3))/(YdotY-XdotY*XdotY);return Vector.create([P[0]+k*X1,P[1]+k*X2,P[2]+k*X3])},pointClosestTo:function(obj){if(obj.direction){if(this.intersects(obj))return this.intersectionWith(obj);if(this.isParallelTo(obj))return null;var D=this.direction.elements,E=obj.direction.elements,D1=D[0],D2=D[1],D3=D[2],E1=E[0],E2=E[1],E3=E[2],x=D3*E1-D1*E3,y=D1*E2-D2*E1,z=D2*E3-D3*E2,N=Vector.create([x*E3-y*E2,y*E1-z*E3,z*E2-x*E1]);return(P=Plane.create(obj.anchor,N)).intersectionWith(this)}var P=obj.elements||obj;if(this.contains(P))return Vector.create(P);var A=this.anchor.elements,A1=(D1=(D=this.direction.elements)[0],D2=D[1],D3=D[2],A[0]),A2=A[1],A3=A[2],V=(x=D1*(P[1]-A2)-D2*(P[0]-A1),y=D2*((P[2]||0)-A3)-D3*(P[1]-A2),z=D3*(P[0]-A1)-D1*((P[2]||0)-A3),Vector.create([D2*x-D3*z,D3*y-D1*x,D1*z-D2*y])),k=this.distanceFrom(P)/V.modulus();return Vector.create([P[0]+V.elements[0]*k,P[1]+V.elements[1]*k,(P[2]||0)+V.elements[2]*k])},rotate:function(t,line){void 0===line.direction&&(line=Line.create(line.to3D(),Vector.k));var R=Matrix.Rotation(t,line.direction).elements,C=line.pointClosestTo(this.anchor).elements,A=this.anchor.elements,D=this.direction.elements,C1=C[0],C2=C[1],C3=C[2],x=A[0]-C1,y=A[1]-C2,z=A[2]-C3;return Line.create([C1+R[0][0]*x+R[0][1]*y+R[0][2]*z,C2+R[1][0]*x+R[1][1]*y+R[1][2]*z,C3+R[2][0]*x+R[2][1]*y+R[2][2]*z],[R[0][0]*D[0]+R[0][1]*D[1]+R[0][2]*D[2],R[1][0]*D[0]+R[1][1]*D[1]+R[1][2]*D[2],R[2][0]*D[0]+R[2][1]*D[1]+R[2][2]*D[2]])},reflectionIn:function(obj){if(obj.normal){var A=this.anchor.elements,D=this.direction.elements,A1=A[0],A2=A[1],A3=A[2],D1=D[0],D2=D[1],D3=D[2],newA=this.anchor.reflectionIn(obj).elements,AD1=A1+D1,AD2=A2+D2,AD3=A3+D3,Q=obj.pointClosestTo([AD1,AD2,AD3]).elements,newD=[Q[0]+(Q[0]-AD1)-newA[0],Q[1]+(Q[1]-AD2)-newA[1],Q[2]+(Q[2]-AD3)-newA[2]];return Line.create(newA,newD)}if(obj.direction)return this.rotate(Math.PI,obj);var P=obj.elements||obj;return Line.create(this.anchor.reflectionIn([P[0],P[1],P[2]||0]),this.direction)},setVectors:function(anchor,direction){if(anchor=Vector.create(anchor),direction=Vector.create(direction),2==anchor.elements.length&&anchor.elements.push(0),2==direction.elements.length&&direction.elements.push(0),anchor.elements.length>3||direction.elements.length>3)return null;var mod=direction.modulus();return 0===mod?null:(this.anchor=anchor,this.direction=Vector.create([direction.elements[0]/mod,direction.elements[1]/mod,direction.elements[2]/mod]),this)}},Line.create=function(anchor,direction){return(new Line).setVectors(anchor,direction)},Line.X=Line.create(Vector.Zero(3),Vector.i),Line.Y=Line.create(Vector.Zero(3),Vector.j),Line.Z=Line.create(Vector.Zero(3),Vector.k),Plane.prototype={eql:function(plane){return this.contains(plane.anchor)&&this.isParallelTo(plane)},dup:function(){return Plane.create(this.anchor,this.normal)},translate:function(vector){var V=vector.elements||vector;return Plane.create([this.anchor.elements[0]+V[0],this.anchor.elements[1]+V[1],this.anchor.elements[2]+(V[2]||0)],this.normal)},isParallelTo:function(obj){var theta;return obj.normal?(theta=this.normal.angleFrom(obj.normal),Math.abs(theta)<=Sylvester.precision||Math.abs(Math.PI-theta)<=Sylvester.precision):obj.direction?this.normal.isPerpendicularTo(obj.direction):null},isPerpendicularTo:function(plane){var theta=this.normal.angleFrom(plane.normal);return Math.abs(Math.PI/2-theta)<=Sylvester.precision},distanceFrom:function(obj){if(this.intersects(obj)||this.contains(obj))return 0;if(obj.anchor){var A=this.anchor.elements,B=obj.anchor.elements,N=this.normal.elements;return Math.abs((A[0]-B[0])*N[0]+(A[1]-B[1])*N[1]+(A[2]-B[2])*N[2])}var P=obj.elements||obj;A=this.anchor.elements,N=this.normal.elements;return Math.abs((A[0]-P[0])*N[0]+(A[1]-P[1])*N[1]+(A[2]-(P[2]||0))*N[2])},contains:function(obj){if(obj.normal)return null;if(obj.direction)return this.contains(obj.anchor)&&this.contains(obj.anchor.add(obj.direction));var P=obj.elements||obj,A=this.anchor.elements,N=this.normal.elements;return Math.abs(N[0]*(A[0]-P[0])+N[1]*(A[1]-P[1])+N[2]*(A[2]-(P[2]||0)))<=Sylvester.precision},intersects:function(obj){return void 0===obj.direction&&void 0===obj.normal?null:!this.isParallelTo(obj)},intersectionWith:function(obj){if(!this.intersects(obj))return null;if(obj.direction){var A=obj.anchor.elements,D=obj.direction.elements,P=this.anchor.elements,multiplier=((N=this.normal.elements)[0]*(P[0]-A[0])+N[1]*(P[1]-A[1])+N[2]*(P[2]-A[2]))/(N[0]*D[0]+N[1]*D[1]+N[2]*D[2]);return Vector.create([A[0]+D[0]*multiplier,A[1]+D[1]*multiplier,A[2]+D[2]*multiplier])}if(obj.normal){for(var direction=this.normal.cross(obj.normal).toUnitVector(),N=this.normal.elements,O=(A=this.anchor.elements,obj.normal.elements),B=obj.anchor.elements,solver=Matrix.Zero(2,2),i=0;solver.isSingular();)i++,solver=Matrix.create([[N[i%3],N[(i+1)%3]],[O[i%3],O[(i+1)%3]]]);for(var inverse=solver.inverse().elements,x=N[0]*A[0]+N[1]*A[1]+N[2]*A[2],y=O[0]*B[0]+O[1]*B[1]+O[2]*B[2],intersection=[inverse[0][0]*x+inverse[0][1]*y,inverse[1][0]*x+inverse[1][1]*y],anchor=[],j=1;j<=3;j++)anchor.push(i==j?0:intersection[(j+(5-i)%3)%3]);return Line.create(anchor,direction)}},pointClosestTo:function(point){var P=point.elements||point,A=this.anchor.elements,N=this.normal.elements,dot=(A[0]-P[0])*N[0]+(A[1]-P[1])*N[1]+(A[2]-(P[2]||0))*N[2];return Vector.create([P[0]+N[0]*dot,P[1]+N[1]*dot,(P[2]||0)+N[2]*dot])},rotate:function(t,line){var R=Matrix.Rotation(t,line.direction).elements,C=line.pointClosestTo(this.anchor).elements,A=this.anchor.elements,N=this.normal.elements,C1=C[0],C2=C[1],C3=C[2],x=A[0]-C1,y=A[1]-C2,z=A[2]-C3;return Plane.create([C1+R[0][0]*x+R[0][1]*y+R[0][2]*z,C2+R[1][0]*x+R[1][1]*y+R[1][2]*z,C3+R[2][0]*x+R[2][1]*y+R[2][2]*z],[R[0][0]*N[0]+R[0][1]*N[1]+R[0][2]*N[2],R[1][0]*N[0]+R[1][1]*N[1]+R[1][2]*N[2],R[2][0]*N[0]+R[2][1]*N[1]+R[2][2]*N[2]])},reflectionIn:function(obj){if(obj.normal){var A=this.anchor.elements,N=this.normal.elements,A1=A[0],A2=A[1],A3=A[2],N1=N[0],N2=N[1],N3=N[2],newA=this.anchor.reflectionIn(obj).elements,AN1=A1+N1,AN2=A2+N2,AN3=A3+N3,Q=obj.pointClosestTo([AN1,AN2,AN3]).elements,newN=[Q[0]+(Q[0]-AN1)-newA[0],Q[1]+(Q[1]-AN2)-newA[1],Q[2]+(Q[2]-AN3)-newA[2]];return Plane.create(newA,newN)}if(obj.direction)return this.rotate(Math.PI,obj);var P=obj.elements||obj;return Plane.create(this.anchor.reflectionIn([P[0],P[1],P[2]||0]),this.normal)},setVectors:function(anchor,v1,v2){if(null===(anchor=(anchor=Vector.create(anchor)).to3D()))return null;if(null===(v1=(v1=Vector.create(v1)).to3D()))return null;if(void 0===v2)v2=null;else if(null===(v2=(v2=Vector.create(v2)).to3D()))return null;var normal,mod,A1=anchor.elements[0],A2=anchor.elements[1],A3=anchor.elements[2],v11=v1.elements[0],v12=v1.elements[1],v13=v1.elements[2];if(null!==v2){var v21=v2.elements[0],v22=v2.elements[1],v23=v2.elements[2];if(0===(mod=(normal=Vector.create([(v12-A2)*(v23-A3)-(v13-A3)*(v22-A2),(v13-A3)*(v21-A1)-(v11-A1)*(v23-A3),(v11-A1)*(v22-A2)-(v12-A2)*(v21-A1)])).modulus()))return null;normal=Vector.create([normal.elements[0]/mod,normal.elements[1]/mod,normal.elements[2]/mod])}else{if(0===(mod=Math.sqrt(v11*v11+v12*v12+v13*v13)))return null;normal=Vector.create([v1.elements[0]/mod,v1.elements[1]/mod,v1.elements[2]/mod])}return this.anchor=anchor,this.normal=normal,this}},Plane.create=function(anchor,v1,v2){return(new Plane).setVectors(anchor,v1,v2)},Plane.XY=Plane.create(Vector.Zero(3),Vector.k),Plane.YZ=Plane.create(Vector.Zero(3),Vector.i),Plane.ZX=Plane.create(Vector.Zero(3),Vector.j),Plane.YX=Plane.XY,Plane.ZY=Plane.YZ,Plane.XZ=Plane.ZX;var $V=Vector.create,$M=Matrix.create,$L=Line.create,$P=Plane.create;